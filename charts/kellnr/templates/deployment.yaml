apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kellnr.fullname" . }}
  labels:
    {{- include "kellnr.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kellnr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kellnr.selectorLabels" . | nindent 8 }}
    spec:
      {{- if or .Values.pvc.enabled .Values.importCert.enabled }}
      volumes:
      {{- end }}
        {{- if .Values.pvc.enabled }}
        - name: {{ .Values.deployment.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.deployment.volumes.persistentVolumeClaim }}
        {{- end }}
        {{- if .Values.importCert.enabled }}
        - name: {{ .Values.importCert.volumeName | quote }}
          configMap:
            name: {{ .Values.importCert.configMapName | quote }}
        {{- end }}
      
      {{- if .Values.dns.enabled }}
      dnsPolicy: {{ .Values.dns.dnsPolicy | quote }}
      dnsConfig:
        nameservers:
          {{- toYaml .Values.dns.dnsConfig.nameservers | nindent 12 }}
        searches:
          {{- toYaml .Values.dns.dnsConfig.searches | nindent 12 }}
      {{- end }}

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kellnr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if eq .Values.kellnr.logLevel "debug" }}
          - name: RUST_BACKTRACE
            value: "1"
          {{- end }}
          - name: KELLNR_LICENSE
            value: {{ required "A valid license is required." .Values.kellnr.license | quote }}
          - name: KELLNR_API_ADDRESS
            value: {{ required "A valid API address, where Kellnr will be reachable is required." .Values.kellnr.apiAddress | quote }}
          - name: KELLNR_API_PROTOCOL
            value: {{ .Values.kellnr.apiProtocol | quote }}
          - name: KELLNR_API_PORT
            value: {{ .Values.service.api.port | quote }}
          - name: KELLNR_API_PORT_PROXY
            value: {{ .Values.service.api.port_proxy | quote }}
          - name: KELLNR_INDEX_PORT
            value: {{ .Values.service.index.port | quote }}
          - name: KELLNR_ADMIN_PWD
            value: {{ .Values.kellnr.adminPwd | quote }}
          - name: KELLNR_ADMIN_TOKEN
            value: {{ .Values.kellnr.adminToken | quote }}
          - name: KELLNR_CRATES_IO_PROXY
            value: {{ .Values.kellnr.cratesIoProxy | quote }}
          - name: KELLNR_LOG_LEVEL
            value: {{ .Values.kellnr.logLevel | quote }}
          - name: KELLNR_LOG_LEVEL_ROCKET
            value: {{ .Values.kellnr.logLevelRocket | quote }}
          - name: KELLNR_LOG_FORMAT
            value: {{ .Values.kellnr.logFormat | quote }}
          - name: KELLNR_RUSTDOC_AUTO_GEN
            value: {{ .Values.kellnr.rustdocAutoGen | quote }}
          - name: KELLNR_CACHE_SIZE
            value: {{ .Values.kellnr.cacheSize | quote }}
          - name: KELLNR_MAX_CRATE_SIZE
            value: {{ .Values.kellnr.maxCrateSize | quote }}
          - name: KELLNR_MAX_DOCS_SIZE
            value: {{ .Values.kellnr.maxDocsSize | quote }}
          ports:
            - containerPort: {{ .Values.service.api.port }}
              name: kellnr-api
              protocol: TCP
            - containerPort: {{ .Values.service.index.port  }}
              name: kellnr-git
              protocol: TCP
          {{- if or .Values.pvc.enabled .Values.importCert.enabled }}
          volumeMounts:
          {{- end }}
            {{- if .Values.pvc.enabled }}
            - mountPath: "/opt/kdata"
              name: {{ .Values.deployment.volumes.name }}
            {{- end }}
            {{- if .Values.importCert.enabled }}
            - name: {{ .Values.importCert.volumeName }}
              mountPath: "/opt/kdata/cert"
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
